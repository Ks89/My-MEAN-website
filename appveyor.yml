# Test against this version of Node.js
environment:
  matrix:
    - nodejs_version: "7"
 #  - nodejs_version: "6"

#platform:
#  - x86
#  - x64

# branches to build
branches:
  # blacklist
  except:
    - gh-pages

# scripts that are called at very beginning, before repo cloning
init:
  - git config --global core.autocrlf input

environment:
  JWT_SECRET:faketestjwt
  TWITTER_CONSUMER_KEY:consumerkey
  TWITTER_CONSUMER_SECRET:consumersecret
  TWITTER_CALLBACK_URL:http://127.0.0.1:3300/api/auth/twitter/callback
  FACEBOOK_APP_ID:appid
  FACEBOOK_APP_SECRET:appsecret
  FACEBOOK_CALLBACK_URL:http://localhost:3300/api/auth/facebook/callback
  GOOGLE_CLIENT_ID:clientid
  GOOGLE_CLIENT_SECRET:clientsecret
  GOOGLE_CALLBACK_URL:http://localhost:3300/api/auth/google/callback
  GITHUB_CLIENT_ID:clientid
  GITHUB_CLIENT_SECRET:clientsecret
  GITHUB_CALLBACK_URL:http://localhost:3300/api/auth/github/callback
  LINKEDIN_CLIENT_ID:clientid
  LINKEDIN_CLIENT_SECRET:clientsecret
  LINKEDIN_CALLBACK_URL:http://localhost:3300/api/auth/linkedin/callback
  USER_EMAIL:fake@fake.it
  PASS_EMAIL:fakepasswordemail
  RECAPTCHA_PUBLIC:recaptchapublic
  RECAPTCHA_SECRET:recaptchasecret
  NODE_ENV:test
  CI:yes

# Install scripts. (runs after repo cloning)
install:
  - nuget install redis-64 -excludeversion
  - redis-64\tools\redis-server.exe --service-install
  - redis-64\tools\redis-server.exe --service-start
  - '@ECHO Redis Started'
  # Get the latest stable version of Node.js or io.js
  - ps: Install-Product node $env:nodejs_version
  - npm -g install npm@latest
  - set PATH=%APPDATA%\npm;%PATH%
  - npm install -g mocha
  - npm install -g nodemon
  - npm install -g gulp@github:gulpjs/gulp#4.0
  - npm install -g istanbul
  - npm install -g remap-istanbul
  - npm install -g codeclimate-test-reporter
  - npm install

matrix:
  fast_finish: true

cache:
  - packages -> **\packages.config      # preserve "packages" directory in the root of build folder but will reset it if packages.config is modified
  - node_modules                        # local npm modules
  - '%APPDATA%\npm-cache'               # npm cache
  - '%USERPROFILE%\.nuget\packages -> **\project.json'  # project.json cache

before_build:


build: false
  # publish_nuget: false
  # publish_nuget_symbols: false
  # verbosity: minimal

shallow_clone: true

services:
  - mongodb

# Post-install test scripts.
test_script:
  # Output useful info for debugging.
  - node --version
  - npm --version
  # run tests
  #- npm test
  - mocha test-server-integration/
  - mocha test-server-unit/3dparty-passport.spec.js
  - mocha test-server-unit/auth-experimental-collapse-db.spec.js
  - mocha test-server-unit/auth-util.spec.js
  - mocha test-server-unit/passport.spec.js
  - mocha test-server-unit/users.spec.js
  - mocha test-server-unit/util.spec.js